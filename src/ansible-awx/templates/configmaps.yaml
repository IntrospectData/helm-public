---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "ansible-awx.fullname" . }}-awx-config
  labels:
    app: {{ template "ansible-awx.name" . }}
    chart: {{ template "ansible-awx.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  awx_settings: |
    import os
    import socket
    ADMINS = ()

    AWX_PROOT_ENABLED = True

    # Automatically deprovision pods that go offline
    AWX_AUTO_DEPROVISION_INSTANCES = True

    #Autoprovisioning should replace this
    CLUSTER_HOST_ID = socket.gethostname()
    SYSTEM_UUID = '00000000-0000-0000-0000-000000000000'

    SESSION_COOKIE_SECURE = False
    CSRF_COOKIE_SECURE = False

    REMOTE_HOST_HEADERS = ['HTTP_X_FORWARDED_FOR']

    STATIC_ROOT = '/var/lib/awx/public/static'
    PROJECTS_ROOT = '/var/lib/awx/projects'
    JOBOUTPUT_ROOT = '/var/lib/awx/job_status'
    SECRET_KEY = os.getenv('AWX_SECRET_KEY')
    ALLOWED_HOSTS = ['*']
    INTERNAL_API_URL = 'http://127.0.0.1:8052'
    SERVER_EMAIL = 'root@localhost'
    DEFAULT_FROM_EMAIL = 'webmaster@localhost'
    EMAIL_SUBJECT_PREFIX = '[AWX] '
    EMAIL_HOST = 'localhost'
    EMAIL_PORT = 25
    EMAIL_HOST_USER = ''
    EMAIL_HOST_PASSWORD = ''
    EMAIL_USE_TLS = False

    LOGGING['handlers']['console'] = {
        '()': 'logging.StreamHandler',
        'level': 'DEBUG',
        'formatter': 'simple',
    }

    LOGGING['loggers']['django.request']['handlers'] = ['console']
    LOGGING['loggers']['rest_framework.request']['handlers'] = ['console']
    LOGGING['loggers']['awx']['handlers'] = ['console']
    LOGGING['loggers']['awx.main.commands.run_callback_receiver']['handlers'] = ['console']
    LOGGING['loggers']['awx.main.commands.inventory_import']['handlers'] = ['console']
    LOGGING['loggers']['awx.main.tasks']['handlers'] = ['console']
    LOGGING['loggers']['awx.main.scheduler']['handlers'] = ['console']
    LOGGING['loggers']['django_auth_ldap']['handlers'] = ['console']
    LOGGING['loggers']['social']['handlers'] = ['console']
    LOGGING['loggers']['system_tracking_migrations']['handlers'] = ['console']
    LOGGING['loggers']['rbac_migrations']['handlers'] = ['console']
    LOGGING['loggers']['awx.isolated.manager.playbooks']['handlers'] = ['console']
    LOGGING['handlers']['callback_receiver'] = {'class': 'logging.NullHandler'}
    LOGGING['handlers']['fact_receiver'] = {'class': 'logging.NullHandler'}
    LOGGING['handlers']['task_system'] = {'class': 'logging.NullHandler'}
    LOGGING['handlers']['tower_warnings'] = {'class': 'logging.NullHandler'}
    LOGGING['handlers']['rbac_migrations'] = {'class': 'logging.NullHandler'}
    LOGGING['handlers']['system_tracking_migrations'] = {'class': 'logging.NullHandler'}
    LOGGING['handlers']['management_playbooks'] = {'class': 'logging.NullHandler'}

    CACHES = {
        'default': {
            'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
            'LOCATION': '{}:{}'.format(os.getenv('MEMCACHED_HOST'), "11211")
        },
        'ephemeral': {
            'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        },
    }

    USE_X_FORWARDED_PORT = True

    DATABASES = {
        'default': {
            'ATOMIC_REQUESTS': True,
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': os.getenv('DATABASE_NAME'),
            'USER': os.getenv('DATABASE_USER'),
            'PASSWORD': os.getenv('DATABASE_PASSWORD'),
            'HOST': os.getenv('DATABASE_HOST'),
            'PORT': os.getenv('DATABASE_PORT', "5432"),
        }
    }
    BROKER_URL = 'amqp://{}:{}@{}:{}/{}'.format(
        os.getenv('RABBITMQ_USER'),
        os.getenv('RABBITMQ_PASSWORD'),
        os.getenv('RABBITMQ_HOST'),
        os.getenv('RABBITMQ_PORT', '5672'),
        os.getenv('RABBITMQ_VHOST', 'awx'))

    CHANNEL_LAYERS = {
        'default': {'BACKEND': 'asgi_amqp.AMQPChannelLayer',
                    'ROUTING': 'awx.main.routing.channel_routing',
                    'CONFIG': {'url': BROKER_URL}}
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "ansible-awx.fullname" . }}-awx-env
  labels:
    app: {{ template "ansible-awx.name" . }}
    chart: {{ template "ansible-awx.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  DATABASE_USER: {{ .Values.postgresql.postgresUser | quote }}
  DATABASE_NAME: {{ .Values.postgresql.postgresDatabase | quote }}
  DATABASE_HOST: {{ .Release.Name }}-postgresql
  DATABASE_PORT: {{ .Values.postgresql.port | quote }}
  AWX_ADMIN_USER: {{ .Values.default_admin_user | quote }}
  MEMCACHED_HOST: {{ .Release.Name }}-memcached
  RABBITMQ_HOST: {{ .Release.Name }}-rabbitmq
  RABBITMQ_USER: {{ .Values.rabbitmq.rabbitmq.username }}
  RABBITMQ_VHOST: default
